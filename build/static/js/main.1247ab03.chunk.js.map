{"version":3,"sources":["component/ImgCord/index.js","component/ToolButton/index.js","component/Modal/index.js","component/ImageModal/index.js","container/App.js","serviceWorker.js","index.js"],"names":["ImgCord","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","someKey","setState","_this$props","props","alt","className","otherProps","objectWithoutProperties","react_default","a","createElement","assign","React","Component","defaultProps","ToolButton","handleToggleColors","isShowColors","colors","handleSelectColor","style","width","length","opacity","map","item","key","color","background","title","onClick","Modal","el","document","modalRoot","body","appendChild","removeChild","ReactDOM","createPortal","children","ImageModal","warpBGBlur","isShow","appHeader","querySelector","classList","add","remove","nextProps","onClose","imgInfo","component_Modal","display","e","preventDefault","src","thumbUrl","App","getURL","obj","arguments","undefined","URI","baseURL","query","word","mode","start","currentPage","reqType","reqFrom","tn","toString","fetchData","jsonp","pageNumber","err","data","newImgDatas","items","allImgDatas","concat","setClientWidth","clientWidth","setDocumentIsHidden","isDocumentHidden","hiddenNamesObj","hidden","initConsoleKeywords","that","assertThisInitialized","console","log","defineProperty","window","get","set","value","warn","info","resetKeywords","handleDeleteImg","cacheImgDatas","push","bgColor","old","keywords","localStorage","setItem","handleImgClick","handleModalClose","getItem","imgDatas","colorIndex","COLORS","findIndex","timer","minContainerNumber","maxCacheNumber","getHiddenName","addEventListener","visibilityChange","startTimeTic","removeEventListener","clearInterval","mozHidden","msHidden","webkitHidden","_this2","setInterval","currentImg","splice","imgWidth","Math","min","Number","thumb_width","left","random","delayTime","durationTime","filter","indexOf","_this3","_this$state","animationPlayState","backgroundColor","animationDelay","component_ToolButton","pic_url","top","thumb_height","height","component_ImgCord","animationDuration","onAnimationEnd","bind","component_ImageModal","Boolean","location","hostname","match","render","src_container_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1247ab03.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.modul.css';\r\n\r\nclass ImgCord extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { someKey: 'someValue' };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ someKey: 'otherValue' });\r\n    }\r\n    render() {\r\n        let {alt,className,...otherProps} = this.props;\r\n        return <img className={\"img-cord \" + className} alt={alt} {...otherProps} />;\r\n    }\r\n}\r\n\r\nImgCord.defaultProps = {\r\n    className:\"\"\r\n};\r\n\r\nexport default ImgCord;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './index.modul.css';\r\n\r\nclass ToolButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { isShowColors: false };\r\n    }\r\n\r\n    handleToggleColors = ()=>{\r\n        this.setState({\r\n            isShowColors:!this.state.isShowColors\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {colors,handleSelectColor} = this.props;\r\n        let {isShowColors} = this.state;\r\n        return (<div className=\"tool-button\">\r\n            <div className=\"tool-button-colors\" style={{width:isShowColors?(colors.length * 1.5)+\"rem\":\"0\",opacity:isShowColors?\"1\":\"0\"}}>\r\n                {colors.map(item=>{\r\n                    return <div key={item.color} className=\"tool-button-color\" style={{background:item.color}} title={item.title} onClick={()=>{\r\n                        handleSelectColor(item)\r\n                    }}></div>;\r\n                })}\r\n            </div>\r\n            <div className=\"tool-button-icon\" onClick={this.handleToggleColors}/> \r\n        </div>);\r\n    }\r\n}\r\n\r\nToolButton.propTypes = {\r\n    handleSelectColor:PropTypes.func.isRequired\r\n};\r\n\r\nToolButton.defaultProps = {\r\n    colors:[],\r\n    handleSelectColor:()=>{}\r\n};\r\n\r\nexport default ToolButton;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.modalRoot = document.body;\r\n        this.modalRoot.appendChild(this.el);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n        this.modalRoot.removeChild(this.el);\r\n    }\r\n  \r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport PropTypes from 'prop-types'\r\nimport './index.modul.css';\r\n\r\nclass ImageModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {isShow} = this.props;\r\n        this.warpBGBlur(isShow);\r\n    }\r\n\r\n    warpBGBlur = (isShow)=>{\r\n        let appHeader = document.querySelector(\".App-header\");\r\n        if (isShow) {\r\n            appHeader.classList.add(\"blur\");\r\n        } else {\r\n            appHeader.classList.remove(\"blur\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.warpBGBlur(nextProps.isShow);\r\n    }\r\n\r\n    render() {\r\n        let {isShow,onClose,imgInfo} = this.props;\r\n        imgInfo = imgInfo || {};\r\n        return (<Modal >\r\n            <div style={{display:isShow?\"block\":\"none\"}}>\r\n                <div className=\"modal-backdrop\">\r\n                    <div className=\"modal-img\" onClick={(e)=>{e.preventDefault()}}>\r\n                        <img src={imgInfo.thumbUrl} alt=\"图片加载失败\" title={imgInfo.title}></img>\r\n                        <div className=\"modal-close-btn\" onClick={onClose}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>);\r\n    }\r\n}\r\n\r\nImageModal.defaultProps = {\r\n    isShow:false,\r\n    onClose:()=>{},\r\n    imgInfo:{}\r\n};\r\n\r\nImageModal.propTypes = {\r\n    isShow:PropTypes.bool.isRequired,\r\n    onClose:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageModal;\r\n","import React, { Component } from 'react';\r\nimport jsonp from 'jsonp';\r\nimport './App.css';\r\nimport URI from 'urijs';\r\nimport ImgCord from '../component/ImgCord';\r\nimport ToolButton from '../component/ToolButton';\r\nimport ImageModal from '../component/ImageModal';\r\nimport COLORS from './colors.json';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let bgColor = window.localStorage.getItem(\"bgColor\");\r\n        this.state = {\r\n            imgDatas: [],\r\n            bgColor:bgColor,\r\n            isShow:false,\r\n            imgInfo:null,\r\n            isDocumentHidden:false//文档是否隐藏\r\n        };\r\n        this.word = \"美女\";\r\n        if (bgColor) {\r\n            let colorIndex = COLORS.findIndex((item)=>{\r\n                return item.color === bgColor;\r\n            })\r\n            if(colorIndex > -1){\r\n                this.word = COLORS[colorIndex].keywords || this.word;\r\n            }\r\n        }\r\n        this.baseURL = \"https://pic.sogou.com/pics\";\r\n        this.pageNumber = 50;\r\n        this.currentPage = 0;\r\n        this.timer = null;//定时器\r\n        this.allImgDatas = [];//所有的图片信息\r\n        this.minContainerNumber = 10;//最小容量\r\n        this.maxCacheNumber = 20;//最大缓存容量\r\n        this.cacheImgDatas = [];//需要删除掉的图片信息\r\n        this.clientWidth = 980;//浏览器的宽度\r\n        this.hiddenNamesObj = this.getHiddenName();\r\n    }\r\n    getURL = (obj={})=>{\r\n        return URI(this.baseURL).query({\r\n            query:obj.word,\r\n            mode:1,\r\n            start:obj.currentPage,\r\n            reqType:\"ajax\",\r\n            reqFrom:\"result\",\r\n            tn:0,\r\n        }).toString();\r\n    }\r\n    fetchData = ()=>{\r\n        jsonp(this.getURL({word:this.word,pageNumber:this.pageNumber,currentPage:this.currentPage}), {},(err, data)=>{\r\n            var newImgDatas = data.items||[];\r\n            if (newImgDatas.length === 0) {\r\n                this.currentPage = 0;\r\n            } else {\r\n                this.currentPage += newImgDatas.length;\r\n            }\r\n            //只是把图片信息放在所有信息容器里面\r\n            this.allImgDatas = this.allImgDatas.concat(newImgDatas)\r\n        });\r\n    }\r\n\r\n    setClientWidth = ()=>{\r\n        this.clientWidth = document.body.clientWidth;\r\n    }\r\n\r\n    setDocumentIsHidden = ()=>{\r\n        this.setState({\r\n            isDocumentHidden:document[this.hiddenNamesObj.hidden]\r\n        });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\r\n        this.setClientWidth();\r\n        //首先进来请求一下数据\r\n        this.fetchData();\r\n        //然后设置定时器\r\n        this.startTimeTic();\r\n        window.addEventListener(\"resize\",this.setClientWidth);\r\n        this.initConsoleKeywords()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\r\n        clearInterval(this.timer);\r\n        window.removeEventListener(\"resize\",this.setClientWidth);\r\n    }\r\n\r\n    initConsoleKeywords=()=>{\r\n        let that = this;\r\n        console.log(\"祝贺你喜提彩蛋~\\n你可以在这里设置搜索图片的关键字，口令如下：\\nkeywords=\\\"美女\\\"\");\r\n        Object.defineProperty(window,\"keywords\",{\r\n            get:function (){\r\n                return that.word;    \r\n            },\r\n            set:function (value){\r\n                if (typeof value !== \"string\") {\r\n                    console.warn(\"别忽悠我，关键字必须是字符串！~~~~(>_<)~~~~ \")\r\n                } else if(!value){\r\n                    console.warn(\"至少写几个关键字吧！(～ o ～)~zZ\")\r\n                } else {\r\n                    console.info(\"关键字设置成功! O(∩_∩)O哈哈~\")\r\n                    that.resetKeywords.call(that,value)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    resetKeywords(keywords){\r\n        this.allImgDatas = [];\r\n        this.currentPage = 0;\r\n        this.word = keywords;\r\n    }\r\n\r\n    getHiddenName(){\r\n        var hidden, visibilityChange;\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            hidden = \"hidden\";\r\n            visibilityChange = \"visibilitychange\";\r\n        } else if (typeof document.mozHidden !== \"undefined\") {\r\n            hidden = \"mozHidden\";\r\n            visibilityChange = \"mozvisibilitychange\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            hidden = \"msHidden\";\r\n            visibilityChange = \"msvisibilitychange\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            hidden = \"webkitHidden\";\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n        }\r\n        return {\r\n            hidden,\r\n            visibilityChange\r\n        }\r\n    }\r\n\r\n    startTimeTic(){\r\n        this.timer = setInterval(() => {\r\n            if (this.state.isDocumentHidden) {//如果界面隐藏了 那么直接跳过\r\n                return ;\r\n            }\r\n            this.setState((old)=>{\r\n                if (this.allImgDatas.length <= this.minContainerNumber) {\r\n                    this.fetchData();\r\n                }\r\n                if (this.allImgDatas.length > 0) {\r\n                    let currentImg = this.allImgDatas.splice(0,1)[0];\r\n                    let imgWidth = Math.min(Number(currentImg.thumb_width||currentImg.width),this.clientWidth * 35 / 100);\r\n                    currentImg.left = Math.random() * (this.clientWidth - imgWidth);\r\n                    currentImg.delayTime = Math.random() * 1;\r\n                    currentImg.durationTime = Math.random() * 5 + 3;\r\n                    old.imgDatas.push(currentImg);//每次拿最前面的一个\r\n                }\r\n                //清空缓存数据\r\n                if (this.cacheImgDatas.length > this.maxCacheNumber) {\r\n                    old.imgDatas = old.imgDatas.filter((item)=>{\r\n                        return !~this.cacheImgDatas.indexOf(item);\r\n                    })\r\n                    this.cacheImgDatas = [];\r\n                }\r\n                return old;\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    handleDeleteImg = (item)=>{\r\n        //放入要删除的缓存中\r\n        this.cacheImgDatas.push(item)\r\n    }\r\n\r\n    handleSelectColor = (item)=>{\r\n        if (this.state.bgColor !== item.color) {\r\n            this.setState(old=>{\r\n                old.bgColor = item.color;\r\n                return old;\r\n            },()=>{\r\n                //重新设置关键字\r\n                this.resetKeywords(item.keywords)\r\n                window.localStorage.setItem(\"bgColor\",item.color)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleImgClick = (item)=>{\r\n        this.setState({\r\n            isShow:true,\r\n            imgInfo:item\r\n        });\r\n    }\r\n\r\n    handleModalClose = ()=>{\r\n        this.setState({\r\n            isShow:false,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {bgColor,isShow,imgInfo,isDocumentHidden} = this.state;\r\n        let animationPlayState = isDocumentHidden?\"paused\":\"running\";\r\n        return (\r\n        <div className=\"App\" style={{backgroundColor:bgColor}}>\r\n            <header className=\"App-header\" >\r\n                <div className=\"center\">\r\n                    <div className=\"dialogue-text hinge\" style={{animationDelay: \".8s\"}}>一大波美女正在靠近</div>\r\n                </div>\r\n                <ToolButton handleSelectColor={this.handleSelectColor} colors={COLORS}/>\r\n                {this.state.imgDatas.map((item)=>{\r\n                    let src = item.thumbUrl || item.pic_url;\r\n                    if (!src) {\r\n                        return null;\r\n                    }\r\n                    let top = item.thumb_height || item.height;\r\n                    return (\r\n                        <ImgCord \r\n                            key={src} \r\n                            src={src} \r\n                            alt={item.alt} \r\n                            title={item.title} \r\n                            style={{\r\n                                top:-top,\r\n                                left:item.left+\"px\",\r\n                                animationDelay: item.delayTime+\"s\",\r\n                                animationDuration:item.durationTime+\"s\",\r\n                                animationPlayState:animationPlayState\r\n                            }}\r\n                            onAnimationEnd={this.handleDeleteImg.bind(this,item)}\r\n                            onClick={this.handleImgClick.bind(this,item)}\r\n                            />\r\n                    )\r\n                })}\r\n            </header>\r\n            <ImageModal isShow={isShow} imgInfo={imgInfo} onClose={this.handleModalClose}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}