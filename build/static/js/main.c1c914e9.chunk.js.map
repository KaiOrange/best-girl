{"version":3,"sources":["component/ImgCord/index.js","component/ToolButton/index.js","component/Modal/index.js","component/ImageModal/index.js","container/App.js","serviceWorker.js","index.js"],"names":["ImgCord","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","someKey","setState","_this$props","props","alt","className","otherProps","objectWithoutProperties","react_default","a","createElement","assign","React","Component","defaultProps","ToolButton","handleToggleColors","isShowColors","colors","handleSelectColor","style","width","length","opacity","map","item","key","color","background","title","onClick","Modal","el","document","modalRoot","body","appendChild","removeChild","ReactDOM","createPortal","children","ImageModal","warpBGBlur","isShow","appHeader","querySelector","classList","add","remove","nextProps","onClose","imgInfo","component_Modal","display","e","preventDefault","src","thumbUrl","App","getURL","obj","arguments","undefined","URI","baseURL","query","word","mode","start","currentPage","reqType","reqFrom","tn","toString","fetchData","jsonp","pageNumber","err","data","console","log","newImgDatas","items","allImgDatas","concat","setClientWidth","clientWidth","setDocumentIsHidden","isDocumentHidden","hiddenNamesObj","hidden","initConsoleKeywords","that","assertThisInitialized","defineProperty","window","get","set","value","warn","info","resetKeywords","handleDeleteImg","cacheImgDatas","push","bgColor","old","keywords","localStorage","setItem","handleImgClick","handleModalClose","getItem","imgDatas","colorIndex","COLORS","findIndex","timer","minContainerNumber","maxCacheNumber","getHiddenName","addEventListener","visibilityChange","startTimeTic","removeEventListener","clearInterval","mozHidden","msHidden","webkitHidden","_this2","setInterval","currentImg","splice","imgWidth","Math","min","Number","thumb_width","left","random","delayTime","durationTime","filter","indexOf","_this3","_this$state","animationPlayState","backgroundColor","component_ToolButton","pic_url","top","thumb_height","height","component_ImgCord","animationDelay","animationDuration","onAnimationEnd","bind","component_ImageModal","Boolean","location","hostname","match","render","src_container_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1c914e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.modul.css';\r\n\r\nclass ImgCord extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { someKey: 'someValue' };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ someKey: 'otherValue' });\r\n    }\r\n    render() {\r\n        let {alt,className,...otherProps} = this.props;\r\n        return <img className={\"img-cord \" + className} alt={alt} {...otherProps} />;\r\n    }\r\n}\r\n\r\nImgCord.defaultProps = {\r\n    className:\"\"\r\n};\r\n\r\nexport default ImgCord;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './index.modul.css';\r\n\r\nclass ToolButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { isShowColors: false };\r\n    }\r\n\r\n    handleToggleColors = ()=>{\r\n        this.setState({\r\n            isShowColors:!this.state.isShowColors\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {colors,handleSelectColor} = this.props;\r\n        let {isShowColors} = this.state;\r\n        return (<div className=\"tool-button\">\r\n            <div className=\"tool-button-colors\" style={{width:isShowColors?(colors.length * 1.5)+\"rem\":\"0\",opacity:isShowColors?\"1\":\"0\"}}>\r\n                {colors.map(item=>{\r\n                    return <div key={item.color} className=\"tool-button-color\" style={{background:item.color}} title={item.title} onClick={()=>{\r\n                        handleSelectColor(item)\r\n                    }}></div>;\r\n                })}\r\n            </div>\r\n            <div className=\"tool-button-icon\" onClick={this.handleToggleColors}/> \r\n        </div>);\r\n    }\r\n}\r\n\r\nToolButton.propTypes = {\r\n    handleSelectColor:PropTypes.func.isRequired\r\n};\r\n\r\nToolButton.defaultProps = {\r\n    colors:[],\r\n    handleSelectColor:()=>{}\r\n};\r\n\r\nexport default ToolButton;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.modalRoot = document.body;\r\n        this.modalRoot.appendChild(this.el);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n        this.modalRoot.removeChild(this.el);\r\n    }\r\n  \r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport PropTypes from 'prop-types'\r\nimport './index.modul.css';\r\n\r\nclass ImageModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {isShow} = this.props;\r\n        this.warpBGBlur(isShow);\r\n    }\r\n\r\n    warpBGBlur = (isShow)=>{\r\n        let appHeader = document.querySelector(\".App-header\");\r\n        if (isShow) {\r\n            appHeader.classList.add(\"blur\");\r\n        } else {\r\n            appHeader.classList.remove(\"blur\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.warpBGBlur(nextProps.isShow);\r\n    }\r\n\r\n    render() {\r\n        let {isShow,onClose,imgInfo} = this.props;\r\n        imgInfo = imgInfo || {};\r\n        return (<Modal >\r\n            <div style={{display:isShow?\"block\":\"none\"}}>\r\n                <div className=\"modal-backdrop\">\r\n                    <div className=\"modal-img\" onClick={(e)=>{e.preventDefault()}}>\r\n                        <img src={imgInfo.thumbUrl} alt=\"图片加载失败\" title={imgInfo.title}></img>\r\n                        <div className=\"modal-close-btn\" onClick={onClose}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>);\r\n    }\r\n}\r\n\r\nImageModal.defaultProps = {\r\n    isShow:false,\r\n    onClose:()=>{},\r\n    imgInfo:{}\r\n};\r\n\r\nImageModal.propTypes = {\r\n    isShow:PropTypes.bool.isRequired,\r\n    onClose:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageModal;\r\n","import React, { Component } from 'react';\nimport jsonp from 'jsonp';\nimport './App.css';\nimport URI from 'urijs';\nimport ImgCord from '../component/ImgCord';\nimport ToolButton from '../component/ToolButton';\nimport ImageModal from '../component/ImageModal';\nimport COLORS from './colors.json';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let bgColor = window.localStorage.getItem(\"bgColor\");\n        this.state = {\n            imgDatas: [],\n            bgColor:bgColor,\n            isShow:false,\n            imgInfo:null,\n            isDocumentHidden:false//文档是否隐藏\n        };\n        let colorIndex = COLORS.findIndex((item)=>{\n            return item.color === bgColor;\n        })\n        this.baseURL = \"https://pic.sogou.com/pics\";\n        this.pageNumber = 50;\n        this.currentPage = 0;\n        this.word = COLORS[colorIndex].keywords || \"aaaaa\";\n        this.timer = null;//定时器\n        this.allImgDatas = [];//所有的图片信息\n        this.minContainerNumber = 10;//最小容量\n        this.maxCacheNumber = 20;//最大缓存容量\n        this.cacheImgDatas = [];//需要删除掉的图片信息\n        this.clientWidth = 980;//浏览器的宽度\n        this.hiddenNamesObj = this.getHiddenName();\n    }\n    getURL = (obj={})=>{\n        return URI(this.baseURL).query({\n            query:obj.word,\n            mode:1,\n            start:obj.currentPage,\n            reqType:\"ajax\",\n            reqFrom:\"result\",\n            tn:0,\n        }).toString();\n    }\n    fetchData = ()=>{\n        jsonp(this.getURL({word:this.word,pageNumber:this.pageNumber,currentPage:this.currentPage}), {},(err, data)=>{\n            console.log(data)\n            var newImgDatas = data.items||[];\n            if (newImgDatas.length === 0) {\n                this.currentPage = 0;\n            } else {\n                this.currentPage += newImgDatas.length;\n            }\n            //只是把图片信息放在所有信息容器里面\n            this.allImgDatas = this.allImgDatas.concat(newImgDatas)\n        });\n    }\n\n    setClientWidth = ()=>{\n        this.clientWidth = document.body.clientWidth;\n    }\n\n    setDocumentIsHidden = ()=>{\n        this.setState({\n            isDocumentHidden:document[this.hiddenNamesObj.hidden]\n        });\n    }\n    \n    componentDidMount() {\n        document.addEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\n        this.setClientWidth();\n        //首先进来请求一下数据\n        this.fetchData();\n        //然后设置定时器\n        this.startTimeTic();\n        window.addEventListener(\"resize\",this.setClientWidth);\n        this.initConsoleKeywords()\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\n        clearInterval(this.timer);\n        window.removeEventListener(\"resize\",this.setClientWidth);\n    }\n\n    initConsoleKeywords=()=>{\n        let that = this;\n        console.log(\"祝贺你喜提彩蛋~\\n你可以在这里设置搜索图片的关键字，口令如下：\\nkeywords=\\\"美女\\\"\");\n        Object.defineProperty(window,\"keywords\",{\n            get:function (){\n                return that.word;    \n            },\n            set:function (value){\n                if (typeof value !== \"string\") {\n                    console.warn(\"别忽悠我，关键字必须是字符串！~~~~(>_<)~~~~ \")\n                } else if(!value){\n                    console.warn(\"至少写几个关键字吧！(～ o ～)~zZ\")\n                } else {\n                    console.info(\"关键字设置成功! O(∩_∩)O哈哈~\")\n                    that.resetKeywords.call(that,value)\n                }\n            }\n        });\n    }\n\n    resetKeywords(keywords){\n        this.allImgDatas = [];\n        this.currentPage = 0;\n        this.word = keywords;\n    }\n\n    getHiddenName(){\n        var hidden, visibilityChange;\n        if (typeof document.hidden !== \"undefined\") {\n            hidden = \"hidden\";\n            visibilityChange = \"visibilitychange\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n            visibilityChange = \"mozvisibilitychange\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n            visibilityChange = \"msvisibilitychange\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n            visibilityChange = \"webkitvisibilitychange\";\n        }\n        return {\n            hidden,\n            visibilityChange\n        }\n    }\n\n    startTimeTic(){\n        this.timer = setInterval(() => {\n            if (this.state.isDocumentHidden) {//如果界面隐藏了 那么直接跳过\n                return ;\n            }\n            this.setState((old)=>{\n                if (this.allImgDatas.length <= this.minContainerNumber) {\n                    this.fetchData();\n                }\n                if (this.allImgDatas.length > 0) {\n                    let currentImg = this.allImgDatas.splice(0,1)[0];\n                    let imgWidth = Math.min(Number(currentImg.thumb_width||currentImg.width),this.clientWidth * 35 / 100);\n                    currentImg.left = Math.random() * (this.clientWidth - imgWidth);\n                    currentImg.delayTime = Math.random() * 1;\n                    currentImg.durationTime = Math.random() * 5 + 3;\n                    old.imgDatas.push(currentImg);//每次拿最前面的一个\n                }\n                //清空缓存数据\n                if (this.cacheImgDatas.length > this.maxCacheNumber) {\n                    old.imgDatas = old.imgDatas.filter((item)=>{\n                        return !~this.cacheImgDatas.indexOf(item);\n                    })\n                    this.cacheImgDatas = [];\n                }\n                return old;\n            })\n        }, 1500);\n    }\n\n    handleDeleteImg = (item)=>{\n        //放入要删除的缓存中\n        this.cacheImgDatas.push(item)\n    }\n\n    handleSelectColor = (item)=>{\n        if (this.state.bgColor !== item.color) {\n            this.setState(old=>{\n                old.bgColor = item.color;\n                return old;\n            },()=>{\n                //重新设置关键字\n                this.resetKeywords(item.keywords)\n                window.localStorage.setItem(\"bgColor\",item.color)\n            });\n        }\n    }\n\n    handleImgClick = (item)=>{\n        this.setState({\n            isShow:true,\n            imgInfo:item\n        });\n    }\n\n    handleModalClose = ()=>{\n        this.setState({\n            isShow:false,\n        });\n    }\n\n    render() {\n        let {bgColor,isShow,imgInfo,isDocumentHidden} = this.state;\n        let animationPlayState = isDocumentHidden?\"paused\":\"running\";\n        return (\n        <div className=\"App\" style={{backgroundColor:bgColor}}>\n            <header className=\"App-header\" >\n                <div className=\"center\">\n                    <div className=\"dialogue-text hinge\">一大波美女正在靠近</div>\n                </div>\n                <ToolButton handleSelectColor={this.handleSelectColor} colors={COLORS}/>\n                {this.state.imgDatas.map((item)=>{\n                    let src = item.thumbUrl || item.pic_url;\n                    if (!src) {\n                        return null;\n                    }\n                    let top = item.thumb_height || item.height;\n                    return (\n                        <ImgCord \n                            key={src} \n                            src={src} \n                            alt={item.alt} \n                            title={item.title} \n                            style={{\n                                top:-top,\n                                left:item.left+\"px\",\n                                animationDelay: item.delayTime+\"s\",\n                                animationDuration:item.durationTime+\"s\",\n                                animationPlayState:animationPlayState\n                            }}\n                            onAnimationEnd={this.handleDeleteImg.bind(this,item)}\n                            onClick={this.handleImgClick.bind(this,item)}\n                            />\n                    )\n                })}\n            </header>\n            <ImageModal isShow={isShow} imgInfo={imgInfo} onClose={this.handleModalClose}/>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}