{"version":3,"sources":["component/ImgCord/index.js","component/ToolButton/index.js","component/Modal/index.js","component/ImageModal/index.js","container/App.js","serviceWorker.js","index.js"],"names":["ImgCord","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","someKey","setState","_this$props","props","alt","otherProps","objectWithoutProperties","react_default","a","createElement","assign","className","React","Component","ToolButton","handleToggleColors","isShowColors","colors","handleSelectColor","style","width","length","opacity","map","item","key","color","background","title","onClick","defaultProps","Modal","el","document","modalRoot","body","appendChild","removeChild","ReactDOM","createPortal","children","ImageModal","warpBGBlur","isShow","appHeader","querySelector","classList","add","remove","nextProps","onClose","imgInfo","component_Modal","display","e","preventDefault","src","thumbUrl","aLT","App","getURL","obj","arguments","undefined","URI","baseURL","query","word","mode","start","currentPage","reqType","reqFrom","tn","toString","fetchData","jsonp","pageNumber","err","data","console","log","newImgDatas","items","allImgDatas","concat","handleDeleteImg","cacheImgDatas","push","bgColor","window","localStorage","setItem","handleImgClick","handleModalClose","imgDatas","getItem","timer","minContainerNumber","maxCacheNumber","startTimeTic","_this2","setInterval","old","currentImg","splice","left","Math","random","clientWidth","Number","thumb_width","delayTime","durationTime","filter","indexOf","clearInterval","_this3","_this$state","backgroundColor","component_ToolButton","pic_url","top","thumb_height","height","component_ImgCord","animationDelay","animationDuration","onAnimationEnd","bind","component_ImageModal","Boolean","location","hostname","match","render","src_container_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91b0bb7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.modul.css';\r\n\r\nclass ImgCord extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { someKey: 'someValue' };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ someKey: 'otherValue' });\r\n    }\r\n    render() {\r\n        let {alt,...otherProps} = this.props;\r\n        return <img className=\"img-cord\" alt={alt} {...otherProps} />;\r\n    }\r\n}\r\n\r\nexport default ImgCord;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './index.modul.css';\r\n\r\nclass ToolButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { isShowColors: false };\r\n    }\r\n\r\n    handleToggleColors = ()=>{\r\n        this.setState({\r\n            isShowColors:!this.state.isShowColors\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {colors,handleSelectColor} = this.props;\r\n        let {isShowColors} = this.state;\r\n        return (<div className=\"tool-button\">\r\n            <div className=\"tool-button-colors\" style={{width:isShowColors?(colors.length * 1.5)+\"rem\":\"0\",opacity:isShowColors?\"1\":\"0\"}}>\r\n                {colors.map(item=>{\r\n                    return <div key={item.color} className=\"tool-button-color\" style={{background:item.color}} title={item.title} onClick={()=>{\r\n                        handleSelectColor(item.color)\r\n                    }}></div>;\r\n                })}\r\n            </div>\r\n            <div className=\"tool-button-icon\" onClick={this.handleToggleColors}/> \r\n        </div>);\r\n    }\r\n}\r\n\r\nToolButton.propTypes = {\r\n    handleSelectColor:PropTypes.func.isRequired\r\n};\r\n\r\nToolButton.defaultProps = {\r\n    colors:[{\r\n        color:\"#282c34\",\r\n        title:\"黑夜\"\r\n    },{\r\n        color:\"#aaa\",\r\n        title:\"白昼\"\r\n    },{\r\n        color:\"#c1e6f7\",\r\n        title:\"淡蓝之光\"\r\n    },{\r\n        color:\"#ffc9c9\",\r\n        title:\"粉红诱惑\"\r\n    },{\r\n        color:\"#f7a374\",\r\n        title:\"活力橙色\"\r\n    }],\r\n    handleSelectColor:()=>{}\r\n};\r\n\r\nexport default ToolButton;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.modalRoot = document.body;\r\n        this.modalRoot.appendChild(this.el);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n        this.modalRoot.removeChild(this.el);\r\n    }\r\n  \r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport PropTypes from 'prop-types'\r\nimport './index.modul.css';\r\n\r\nclass ImageModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {isShow} = this.props;\r\n        this.warpBGBlur(isShow);\r\n    }\r\n\r\n    warpBGBlur = (isShow)=>{\r\n        let appHeader = document.querySelector(\".App-header\");\r\n        debugger;\r\n        if (isShow) {\r\n            appHeader.classList.add(\"blur\");\r\n        } else {\r\n            appHeader.classList.remove(\"blur\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.warpBGBlur(nextProps.isShow);\r\n    }\r\n\r\n    render() {\r\n        let {isShow,onClose,imgInfo} = this.props;\r\n        imgInfo = imgInfo || {};\r\n        return (<Modal >\r\n            <div style={{display:isShow?\"block\":\"none\"}}>\r\n                <div className=\"modal-backdrop\">\r\n                    <div className=\"modal-img\" onClick={(e)=>{e.preventDefault()}}>\r\n                        <img src={imgInfo.thumbUrl} aLT=\"图片加载失败\" title={imgInfo.title}></img>\r\n                        <div className=\"modal-close-btn\" onClick={onClose}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>);\r\n    }\r\n}\r\n\r\nImageModal.defaultProps = {\r\n    isShow:false,\r\n    onClose:()=>{},\r\n    imgInfo:{}\r\n};\r\n\r\nImageModal.propTypes = {\r\n    isShow:PropTypes.bool.isRequired,\r\n    onClose:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageModal;\r\n","import React, { Component } from 'react';\nimport jsonp from 'jsonp';\nimport './App.css';\nimport URI from 'urijs';\nimport ImgCord from '../component/ImgCord';\nimport ToolButton from '../component/ToolButton';\nimport ImageModal from '../component/ImageModal';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgDatas: [],\n            bgColor:window.localStorage.getItem(\"bgColor\"),\n            isShow:false,\n            imgInfo:null\n        };\n        this.baseURL = \"https://pic.sogou.com/pics\";\n        this.pageNumber = 50;\n        this.currentPage = 0;\n        this.word = \"美女\";\n        this.timer = null;//定时器\n        this.allImgDatas = [];//所有的图片信息\n        this.minContainerNumber = 10;//最小容量\n        this.maxCacheNumber = 20;//最大缓存容量\n        this.cacheImgDatas = [];//需要删除掉的图片信息\n    }\n    getURL = (obj={})=>{\n        return URI(this.baseURL).query({\n            query:obj.word,\n            mode:1,\n            start:obj.currentPage,\n            reqType:\"ajax\",\n            reqFrom:\"result\",\n            tn:0,\n        }).toString();\n    }\n    fetchData = ()=>{\n        jsonp(this.getURL({word:this.word,pageNumber:this.pageNumber,currentPage:this.currentPage}), {},(err, data)=>{\n            console.log(data)\n            var newImgDatas = data.items||[];\n            if (newImgDatas.length === 0) {\n                this.currentPage = 0;\n            } else {\n                this.currentPage += newImgDatas.length;\n            }\n            //只是把图片信息放在所有信息容器里面\n            this.allImgDatas = this.allImgDatas.concat(newImgDatas)\n        });\n    }\n    \n    componentDidMount() {\n        //首先进来请求一下数据\n        this.fetchData();\n        //然后设置定时器\n        this.startTimeTic();\n    }\n\n    startTimeTic(){\n        this.timer = setInterval(() => {\n            this.setState((old)=>{\n                if (this.allImgDatas.length <= this.minContainerNumber) {\n                    this.fetchData();\n                }\n                if (this.allImgDatas.length > 0) {\n                    let currentImg = this.allImgDatas.splice(0,1)[0];\n                    currentImg.left = Math.random() * (document.body.clientWidth - Number(currentImg.thumb_width||currentImg.width));\n                    currentImg.delayTime = Math.random() * 3;\n                    currentImg.durationTime = Math.random() * 5 + 3;\n                    old.imgDatas.push(currentImg);//每次拿最前面的一个\n                }\n                //清空缓存数据\n                if (this.cacheImgDatas.length > this.maxCacheNumber) {\n                    debugger;\n                    old.imgDatas = old.imgDatas.filter((item)=>{\n                        return !~this.cacheImgDatas.indexOf(item);\n                    })\n                    this.cacheImgDatas = [];\n                }\n                return old;\n            })\n        }, 1500);\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.timer)\n    }\n    \n    \n\n    handleDeleteImg = (item)=>{\n        //放入要删除的缓存中\n        this.cacheImgDatas.push(item)\n    }\n\n    handleSelectColor = (color)=>{\n        this.setState({bgColor:color},()=>{\n            window.localStorage.setItem(\"bgColor\",color)\n        });\n    }\n\n    handleImgClick = (item)=>{\n        this.setState({\n            isShow:true,\n            imgInfo:item\n        });\n    }\n\n    handleModalClose = ()=>{\n        this.setState({\n            isShow:false,\n        });\n    }\n\n    render() {\n        let {bgColor,isShow,imgInfo} = this.state;\n        return (\n        <div className=\"App\" style={{backgroundColor:bgColor}}>\n            <header className=\"App-header\" >\n                <div className=\"center\">\n                    <div className=\"dialogue-text hinge\">一大波美女正在靠近</div>\n                </div>\n                <ToolButton handleSelectColor={this.handleSelectColor}/>\n                {this.state.imgDatas.map((item)=>{\n                    let src = item.thumbUrl || item.pic_url;\n                    if (!src) {\n                        return null;\n                    }\n                    let top = item.thumb_height || item.height;\n                    return (\n                        <ImgCord \n                            key={src} \n                            src={src} \n                            alt={item.alt} \n                            title={item.title} \n                            style={{top:-top,left:item.left+\"px\",animationDelay: item.delayTime+\"s\",animationDuration:item.durationTime+\"s\"}}\n                            onAnimationEnd={this.handleDeleteImg.bind(this,item)}\n                            onClick={this.handleImgClick.bind(this,item)}\n                            />\n                    )\n                })}\n            </header>\n            <ImageModal isShow={isShow} imgInfo={imgInfo} onClose={this.handleModalClose}/>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}