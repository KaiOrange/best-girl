{"version":3,"sources":["component/ImgCord/index.js","component/ToolButton/index.js","component/DesktopButton/index.js","component/Modal/index.js","component/ImageModal/index.js","container/App.js","serviceWorker.js","index.js"],"names":["ImgCord","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","someKey","setState","_this$props","props","alt","className","otherProps","objectWithoutProperties","react_default","a","createElement","assign","React","Component","defaultProps","ToolButton","handleToggleColors","isShowColors","colors","handleSelectColor","style","width","length","opacity","map","item","key","color","background","title","onClick","DesktopButton","handleNativeEvent","e","preventDefault","isShow","savePrompt","componentDidMount","window","addEventListener","componentWillUnmount","remoteEventListener","handleClick","prompt","display","Modal","el","document","modalRoot","body","appendChild","removeChild","ReactDOM","createPortal","children","ImageModal","warpBGBlur","appHeader","querySelector","classList","add","remove","nextProps","onClose","imgInfo","component_Modal","src","thumbUrl","App","getURL","obj","arguments","undefined","URI","baseURL","query","word","mode","start","currentPage","reqType","reqFrom","tn","toString","fetchData","jsonp","pageNumber","err","data","newImgDatas","items","allImgDatas","concat","setClientWidth","clientWidth","setDocumentIsHidden","isDocumentHidden","hiddenNamesObj","hidden","initConsoleKeywords","that","assertThisInitialized","console","log","defineProperty","get","set","value","warn","info","resetKeywords","handleDeleteImg","cacheImgDatas","push","bgColor","old","keywords","localStorage","setItem","handleImgClick","handleModalClose","getItem","imgDatas","colorIndex","COLORS","findIndex","timer","minContainerNumber","maxCacheNumber","getHiddenName","visibilityChange","startTimeTic","removeEventListener","clearInterval","mozHidden","msHidden","webkitHidden","_this2","setInterval","currentImg","splice","imgWidth","Math","min","Number","thumb_width","left","random","delayTime","durationTime","filter","indexOf","_this3","_this$state","animationPlayState","backgroundColor","animationDelay","component_ToolButton","component_DesktopButton","pic_url","top","thumb_height","height","component_ImgCord","animationDuration","onAnimationEnd","bind","component_ImageModal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","render","src_container_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.be7d8656.chunk.js","sourcesContent":["import React from 'react';\nimport './index.modul.css';\n\nclass ImgCord extends React.Component {\n    constructor() {\n        super();\n        this.state = { someKey: 'someValue' };\n    }\n\n    componentDidMount() {\n        this.setState({ someKey: 'otherValue' });\n    }\n    render() {\n        let {alt,className,...otherProps} = this.props;\n        return <img className={\"img-cord \" + className} alt={alt} {...otherProps} />;\n    }\n}\n\nImgCord.defaultProps = {\n    className:\"\"\n};\n\nexport default ImgCord;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './index.modul.css';\n\nclass ToolButton extends React.Component {\n    constructor() {\n        super();\n        this.state = { isShowColors: false };\n    }\n\n    handleToggleColors = ()=>{\n        this.setState({\n            isShowColors:!this.state.isShowColors\n        });\n    }\n\n    render() {\n        let {colors,handleSelectColor} = this.props;\n        let {isShowColors} = this.state;\n        return (<div className=\"tool-button\">\n            <div className=\"tool-button-colors\" style={{width:isShowColors?(colors.length * 1.5)+\"rem\":\"0\",opacity:isShowColors?\"1\":\"0\"}}>\n                {colors.map(item=>{\n                    return <div key={item.color} className=\"tool-button-color\" style={{background:item.color}} title={item.title} onClick={()=>{\n                        handleSelectColor(item)\n                    }}></div>;\n                })}\n            </div>\n            <div className=\"tool-button-icon\" onClick={this.handleToggleColors}/> \n        </div>);\n    }\n}\n\nToolButton.propTypes = {\n    handleSelectColor:PropTypes.func.isRequired\n};\n\nToolButton.defaultProps = {\n    colors:[],\n    handleSelectColor:()=>{}\n};\n\nexport default ToolButton;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './index.modul.css';\n\nclass DesktopButton extends React.Component {\n    constructor() {\n        super();\n        this.state = { isShow: false };\n        this.savePrompt = null;\n    }\n\n    handleNativeEvent = (e)=>{\n        e.preventDefault();\n        this.setState({\n          isShow: true\n        });\n        this.savePrompt = e;\n        return false;\n    }\n\n    componentDidMount = ()=>{\n        window.addEventListener(\"beforeinstallprompt\",this.handleNativeEvent);\n    }\n\n    componentWillUnmount = ()=>{\n        this.savePrompt = null;\n        window.remoteEventListener(\"beforeinstallprompt\",this.handleNativeEvent);\n    }\n\n    handleClick = ()=>{\n        if (this.savePrompt) {\n            let { handleClick } = this.props;\n            if (handleClick) {\n                handleClick();\n            }\n            this.savePrompt.prompt();\n        }\n    }\n\n    render() {\n        let { isShow } = this.state;\n        return (<div className=\"desktop-button\" style={{display:isShow ? \"block\" : \"none\"}}>\n            <div className=\"desktop-button-icon\" onClick={this.handleClick}/> \n        </div>);\n    }\n}\n\nDesktopButton.propTypes = {\n    handleClick: PropTypes.func.isRequired\n};\n\nDesktopButton.defaultProps = {\n    handleClick:()=>{}\n};\n\nexport default DesktopButton;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Modal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n    }\n  \n    componentDidMount() {\n        this.modalRoot = document.body;\n        this.modalRoot.appendChild(this.el);\n    }\n  \n    componentWillUnmount() {\n        this.modalRoot.removeChild(this.el);\n    }\n  \n    render() {\n        return ReactDOM.createPortal(\n            this.props.children,\n            this.el,\n        );\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport Modal from '../Modal';\nimport PropTypes from 'prop-types'\nimport './index.modul.css';\n\nclass ImageModal extends React.Component {\n    constructor() {\n        super();\n        this.state = { };\n    }\n\n    componentDidMount() {\n        let {isShow} = this.props;\n        this.warpBGBlur(isShow);\n    }\n\n    warpBGBlur = (isShow)=>{\n        let appHeader = document.querySelector(\".App-header\");\n        if (isShow) {\n            appHeader.classList.add(\"blur\");\n        } else {\n            appHeader.classList.remove(\"blur\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.isShow !== this.props.isShow) {\n            this.warpBGBlur(nextProps.isShow);\n        }\n    }\n\n    render() {\n        let {isShow,onClose,imgInfo} = this.props;\n        imgInfo = imgInfo || {};\n        return (<Modal >\n            <div style={{display:isShow?\"block\":\"none\"}}>\n                <div className=\"modal-backdrop\">\n                    <div className=\"modal-img\" onClick={(e)=>{e.preventDefault()}}>\n                        <img src={imgInfo.thumbUrl} alt=\"图片加载失败\" title={imgInfo.title}></img>\n                        <div className=\"modal-close-btn\" onClick={onClose}/>\n                    </div>\n                </div>\n            </div>\n        </Modal>);\n    }\n}\n\nImageModal.defaultProps = {\n    isShow:false,\n    onClose:()=>{},\n    imgInfo:{}\n};\n\nImageModal.propTypes = {\n    isShow:PropTypes.bool.isRequired,\n    onClose:PropTypes.func.isRequired,\n};\n\nexport default ImageModal;\n","import React, { Component } from 'react';\nimport jsonp from 'jsonp';\nimport './App.css';\nimport URI from 'urijs';\nimport ImgCord from '../component/ImgCord';\nimport ToolButton from '../component/ToolButton';\nimport DesktopButton from '../component/DesktopButton';\nimport ImageModal from '../component/ImageModal';\nimport COLORS from './colors.json';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let bgColor = window.localStorage.getItem(\"bgColor\");\n        this.state = {\n            imgDatas: [],\n            bgColor:bgColor,\n            isShow:false,\n            imgInfo:null,\n            isDocumentHidden:false//文档是否隐藏\n        };\n        this.word = \"美女\";\n        if (bgColor) {\n            let colorIndex = COLORS.findIndex((item)=>{\n                return item.color === bgColor;\n            })\n            if(colorIndex > -1){\n                this.word = COLORS[colorIndex].keywords || this.word;\n            }\n        }\n        this.baseURL = \"https://pic.sogou.com/pics\";\n        this.pageNumber = 50;\n        this.currentPage = 0;\n        this.timer = null;//定时器\n        this.allImgDatas = [];//所有的图片信息\n        this.minContainerNumber = 10;//最小容量\n        this.maxCacheNumber = 20;//最大缓存容量\n        this.cacheImgDatas = [];//需要删除掉的图片信息\n        this.clientWidth = 980;//浏览器的宽度\n        this.hiddenNamesObj = this.getHiddenName();\n    }\n    getURL = (obj={})=>{\n        return URI(this.baseURL).query({\n            query:obj.word,\n            mode:1,\n            start:obj.currentPage,\n            reqType:\"ajax\",\n            reqFrom:\"result\",\n            tn:0,\n        }).toString();\n    }\n    fetchData = ()=>{\n        jsonp(this.getURL({word:this.word,pageNumber:this.pageNumber,currentPage:this.currentPage}), {},(err, data)=>{\n            var newImgDatas = data.items||[];\n            if (newImgDatas.length === 0) {\n                this.currentPage = 0;\n            } else {\n                this.currentPage += newImgDatas.length;\n            }\n            //只是把图片信息放在所有信息容器里面\n            this.allImgDatas = this.allImgDatas.concat(newImgDatas)\n        });\n    }\n\n    setClientWidth = ()=>{\n        this.clientWidth = document.body.clientWidth;\n    }\n\n    setDocumentIsHidden = ()=>{\n        this.setState({\n            isDocumentHidden:document[this.hiddenNamesObj.hidden]\n        });\n    }\n    \n    componentDidMount() {\n        document.addEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\n        this.setClientWidth();\n        //首先进来请求一下数据\n        this.fetchData();\n        //然后设置定时器\n        this.startTimeTic();\n        window.addEventListener(\"resize\",this.setClientWidth);\n        this.initConsoleKeywords()\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\n        clearInterval(this.timer);\n        window.removeEventListener(\"resize\",this.setClientWidth);\n    }\n\n    initConsoleKeywords=()=>{\n        let that = this;\n        console.log(\"祝贺你喜提彩蛋~\\n你可以在这里设置搜索图片的关键字，口令如下：\\nkeywords=\\\"美女\\\"\");\n        Object.defineProperty(window,\"keywords\",{\n            get:function (){\n                return that.word;    \n            },\n            set:function (value){\n                if (typeof value !== \"string\") {\n                    console.warn(\"别忽悠我，关键字必须是字符串！~~~~(>_<)~~~~ \")\n                } else if(!value){\n                    console.warn(\"至少写几个关键字吧！(～ o ～)~zZ\")\n                } else {\n                    console.info(\"关键字设置成功! O(∩_∩)O哈哈~\")\n                    that.resetKeywords.call(that,value)\n                }\n            }\n        });\n    }\n\n    resetKeywords(keywords){\n        this.allImgDatas = [];\n        this.currentPage = 0;\n        this.word = keywords;\n    }\n\n    getHiddenName(){\n        var hidden, visibilityChange;\n        if (typeof document.hidden !== \"undefined\") {\n            hidden = \"hidden\";\n            visibilityChange = \"visibilitychange\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n            visibilityChange = \"mozvisibilitychange\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n            visibilityChange = \"msvisibilitychange\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n            visibilityChange = \"webkitvisibilitychange\";\n        }\n        return {\n            hidden,\n            visibilityChange\n        }\n    }\n\n    startTimeTic(){\n        this.timer = setInterval(() => {\n            if (this.state.isDocumentHidden) {//如果界面隐藏了 那么直接跳过\n                return ;\n            }\n            this.setState((old)=>{\n                if (this.allImgDatas.length <= this.minContainerNumber) {\n                    this.fetchData();\n                }\n                if (this.allImgDatas.length > 0) {\n                    let currentImg = this.allImgDatas.splice(0,1)[0];\n                    let imgWidth = Math.min(Number(currentImg.thumb_width||currentImg.width),this.clientWidth * 35 / 100);\n                    currentImg.left = Math.random() * (this.clientWidth - imgWidth);\n                    currentImg.delayTime = Math.random() * 1;\n                    currentImg.durationTime = Math.random() * 5 + 3;\n                    old.imgDatas.push(currentImg);//每次拿最前面的一个\n                }\n                //清空缓存数据\n                if (this.cacheImgDatas.length > this.maxCacheNumber) {\n                    old.imgDatas = old.imgDatas.filter((item)=>{\n                        return !~this.cacheImgDatas.indexOf(item);\n                    })\n                    this.cacheImgDatas = [];\n                }\n                return old;\n            })\n        }, 1000);\n    }\n\n    handleDeleteImg = (item)=>{\n        //放入要删除的缓存中\n        this.cacheImgDatas.push(item)\n    }\n\n    handleSelectColor = (item)=>{\n        if (this.state.bgColor !== item.color) {\n            this.setState(old=>{\n                old.bgColor = item.color;\n                return old;\n            },()=>{\n                //重新设置关键字\n                this.resetKeywords(item.keywords)\n                window.localStorage.setItem(\"bgColor\",item.color)\n            });\n        }\n    }\n\n    handleImgClick = (item)=>{\n        this.setState({\n            isShow:true,\n            imgInfo:item\n        });\n    }\n\n    handleModalClose = ()=>{\n        this.setState({\n            isShow:false,\n        });\n    }\n\n    render() {\n        let {bgColor,isShow,imgInfo,isDocumentHidden} = this.state;\n        let animationPlayState = isDocumentHidden?\"paused\":\"running\";\n        return (\n        <div className=\"App\" style={{backgroundColor:bgColor}}>\n            <header className=\"App-header\" >\n                <div className=\"center\">\n                    <div className=\"dialogue-text hinge\" style={{animationDelay: \".8s\"}}>一大波美女正在靠近</div>\n                </div>\n                <ToolButton handleSelectColor={this.handleSelectColor} colors={COLORS}/>\n                <DesktopButton />\n                {this.state.imgDatas.map((item)=>{\n                    let src = item.thumbUrl || item.pic_url;\n                    if (!src) {\n                        return null;\n                    }\n                    let top = item.thumb_height || item.height;\n                    return (\n                        <ImgCord \n                            key={src} \n                            src={src} \n                            alt={item.alt} \n                            title={item.title} \n                            style={{\n                                top:-top,\n                                left:item.left+\"px\",\n                                animationDelay: item.delayTime+\"s\",\n                                animationDuration:item.durationTime+\"s\",\n                                animationPlayState:animationPlayState\n                            }}\n                            onAnimationEnd={this.handleDeleteImg.bind(this,item)}\n                            onClick={this.handleImgClick.bind(this,item)}\n                            />\n                    )\n                })}\n            </header>\n            <ImageModal isShow={isShow} imgInfo={imgInfo} onClose={this.handleModalClose}/>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}