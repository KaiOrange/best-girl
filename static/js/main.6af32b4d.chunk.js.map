{"version":3,"sources":["component/ImgCord/index.js","component/ToolButton/index.js","component/DesktopButton/index.js","component/Modal/index.js","component/ImageModal/index.js","container/App.js","serviceWorker.js","index.js"],"names":["ImgCord","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","someKey","setState","_this$props","props","alt","className","otherProps","objectWithoutProperties","react_default","a","createElement","assign","React","Component","defaultProps","ToolButton","handleToggleColors","isShowColors","colors","handleSelectColor","style","width","length","opacity","map","item","index","key","color","background","title","onClick","DesktopButton","handleNativeEvent","e","preventDefault","isShow","savePrompt","componentDidMount","window","addEventListener","componentWillUnmount","remoteEventListener","handleClick","prompt","display","Modal","el","document","modalRoot","body","appendChild","removeChild","ReactDOM","createPortal","children","ImageModal","warpBGBlur","appHeader","querySelector","classList","add","remove","nextProps","onClose","imgInfo","component_Modal","src","thumbUrl","App","getURL","obj","arguments","undefined","URI","baseURL","query","word","mode","start","currentPage","reqType","reqFrom","tn","toString","fetchData","jsonp","pageNumber","currentPages","colorIndex","err","data","newImgDatas","items","allImgDatas","concat","setClientWidth","clientWidth","setDocumentIsHidden","isDocumentHidden","hiddenNamesObj","hidden","initConsoleKeywords","that","assertThisInitialized","console","log","defineProperty","get","set","value","warn","info","resetKeywords","handleDeleteImg","cacheImgDatas","push","bgColor","old","keywords","localStorage","setItem","handleImgClick","handleModalClose","getItem","imgDatas","COLORS","findIndex","Array","fill","timer","minContainerNumber","maxCacheNumber","maxQueueNumber","getHiddenName","visibilityChange","startTimeTic","removeEventListener","clearInterval","_this2","filter","indexOf","mozHidden","msHidden","webkitHidden","_this3","setInterval","currentImg","splice","imgWidth","Math","min","Number","thumb_width","left","random","delayTime","durationTime","_this4","_this$state","animationPlayState","backgroundColor","animationDelay","component_ToolButton","component_DesktopButton","pic_url","top","thumb_height","height","component_ImgCord","animationDuration","onAnimationEnd","bind","component_ImageModal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","render","src_container_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6af32b4d.chunk.js","sourcesContent":["import React from 'react';\nimport './index.modul.css';\n\nclass ImgCord extends React.Component {\n    constructor() {\n        super();\n        this.state = { someKey: 'someValue' };\n    }\n\n    componentDidMount() {\n        this.setState({ someKey: 'otherValue' });\n    }\n    render() {\n        let {alt,className,...otherProps} = this.props;\n        return <img className={\"img-cord \" + className} alt={alt} {...otherProps} />;\n    }\n}\n\nImgCord.defaultProps = {\n    className:\"\"\n};\n\nexport default ImgCord;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './index.modul.css';\n\nclass ToolButton extends React.Component {\n    constructor() {\n        super();\n        this.state = { isShowColors: false };\n    }\n\n    handleToggleColors = ()=>{\n        this.setState({\n            isShowColors:!this.state.isShowColors\n        });\n    }\n\n    render() {\n        let {colors,handleSelectColor} = this.props;\n        let {isShowColors} = this.state;\n        return (<div className=\"tool-button\">\n            <div className=\"tool-button-colors\" style={{width:isShowColors?(colors.length * 1.5)+\"rem\":\"0\",opacity:isShowColors?\"1\":\"0\"}}>\n                {colors.map((item,index)=>{\n                    return <div key={item.color} className=\"tool-button-color\" style={{background:item.color}} title={item.title} onClick={()=>{\n                        handleSelectColor(item,index)\n                    }}></div>;\n                })}\n            </div>\n            <div className=\"tool-button-icon\" onClick={this.handleToggleColors}/> \n        </div>);\n    }\n}\n\nToolButton.propTypes = {\n    handleSelectColor:PropTypes.func.isRequired\n};\n\nToolButton.defaultProps = {\n    colors:[],\n    handleSelectColor:()=>{}\n};\n\nexport default ToolButton;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './index.modul.css';\n\nclass DesktopButton extends React.Component {\n    constructor() {\n        super();\n        this.state = { isShow: false };\n        this.savePrompt = null;\n    }\n\n    handleNativeEvent = (e)=>{\n        e.preventDefault();\n        this.setState({\n          isShow: true\n        });\n        this.savePrompt = e;\n        return false;\n    }\n\n    componentDidMount = ()=>{\n        window.addEventListener(\"beforeinstallprompt\",this.handleNativeEvent);\n    }\n\n    componentWillUnmount = ()=>{\n        this.savePrompt = null;\n        window.remoteEventListener(\"beforeinstallprompt\",this.handleNativeEvent);\n    }\n\n    handleClick = ()=>{\n        if (this.savePrompt) {\n            let { handleClick } = this.props;\n            if (handleClick) {\n                handleClick();\n            }\n            this.savePrompt.prompt();\n        }\n    }\n\n    render() {\n        let { isShow } = this.state;\n        return (<div className=\"desktop-button\" style={{display:isShow ? \"block\" : \"none\"}}>\n            <div className=\"desktop-button-icon\" onClick={this.handleClick}/> \n        </div>);\n    }\n}\n\nDesktopButton.propTypes = {\n    handleClick: PropTypes.func.isRequired\n};\n\nDesktopButton.defaultProps = {\n    handleClick:()=>{}\n};\n\nexport default DesktopButton;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Modal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n    }\n  \n    componentDidMount() {\n        this.modalRoot = document.body;\n        this.modalRoot.appendChild(this.el);\n    }\n  \n    componentWillUnmount() {\n        this.modalRoot.removeChild(this.el);\n    }\n  \n    render() {\n        return ReactDOM.createPortal(\n            this.props.children,\n            this.el,\n        );\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport Modal from '../Modal';\nimport PropTypes from 'prop-types'\nimport './index.modul.css';\n\nclass ImageModal extends React.Component {\n    constructor() {\n        super();\n        this.state = { };\n    }\n\n    componentDidMount() {\n        let {isShow} = this.props;\n        this.warpBGBlur(isShow);\n    }\n\n    warpBGBlur = (isShow)=>{\n        let appHeader = document.querySelector(\".App-header\");\n        if (isShow) {\n            appHeader.classList.add(\"blur\");\n        } else {\n            appHeader.classList.remove(\"blur\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.isShow !== this.props.isShow) {\n            this.warpBGBlur(nextProps.isShow);\n        }\n    }\n\n    render() {\n        let {isShow,onClose,imgInfo} = this.props;\n        imgInfo = imgInfo || {};\n        return (<Modal >\n            <div style={{display:isShow?\"block\":\"none\"}}>\n                <div className=\"modal-backdrop\">\n                    <div className=\"modal-img\" onClick={(e)=>{e.preventDefault()}}>\n                        <img src={imgInfo.thumbUrl} alt=\"图片加载失败\" title={imgInfo.title}></img>\n                        <div className=\"modal-close-btn\" onClick={onClose}/>\n                    </div>\n                </div>\n            </div>\n        </Modal>);\n    }\n}\n\nImageModal.defaultProps = {\n    isShow:false,\n    onClose:()=>{},\n    imgInfo:{}\n};\n\nImageModal.propTypes = {\n    isShow:PropTypes.bool.isRequired,\n    onClose:PropTypes.func.isRequired,\n};\n\nexport default ImageModal;\n","import React, { Component } from 'react';\nimport jsonp from 'jsonp';\nimport './App.css';\nimport URI from 'urijs';\nimport ImgCord from '../component/ImgCord';\nimport ToolButton from '../component/ToolButton';\nimport DesktopButton from '../component/DesktopButton';\nimport ImageModal from '../component/ImageModal';\nimport COLORS from './colors.json';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let bgColor = window.localStorage.getItem(\"bgColor\");\n        this.state = {\n            imgDatas: [],\n            bgColor:bgColor,\n            isShow:false,\n            imgInfo:null,\n            isDocumentHidden:false//文档是否隐藏\n        };\n        this.word = \"美女\";\n        this.colorIndex = 0;\n        if (bgColor) {\n            let colorIndex = COLORS.findIndex((item)=>{\n                return item.color === bgColor;\n            })\n            if(colorIndex > -1){\n                this.colorIndex = colorIndex;\n                this.word = COLORS[colorIndex].keywords || this.word;\n            }\n        }\n        this.baseURL = \"https://pic.sogou.com/pics\";\n        this.pageNumber = 20;\n        // 每种颜色对应一个当前页面 +1是因为最后一个是菜单模式\n        this.currentPages = new Array(COLORS.length + 1).fill(0);\n        this.timer = null;//定时器\n        // 所有的图片信息\n        // 每种颜色对应一个数组 +1是因为最后一个是菜单模式\n        this.allImgDatas = new Array(COLORS.length + 1).fill([]);\n        this.minContainerNumber = 5;//最小容量\n        this.maxCacheNumber = 10;//最大缓存容量\n        this.maxQueueNumber = this.maxCacheNumber + 5;//最大队列容量\n        this.cacheImgDatas = [];//需要删除掉的图片信息\n        this.clientWidth = 980;//浏览器的宽度\n        this.hiddenNamesObj = this.getHiddenName();\n    }\n    getURL = (obj={})=>{\n        return URI(this.baseURL).query({\n            query:obj.word,\n            mode:1,\n            start:obj.currentPage,\n            reqType:\"ajax\",\n            reqFrom:\"result\",\n            tn:0,\n        }).toString();\n    }\n    fetchData = ()=>{\n        jsonp(this.getURL({\n                word:this.word,\n                pageNumber:this.pageNumber,\n                currentPage:this.currentPages[this.colorIndex]\n            }), {},(err, data)=>{\n                var newImgDatas = data.items||[];\n                if (newImgDatas.length === 0) {\n                    this.currentPages[this.colorIndex] = 0;\n                } else {\n                    this.currentPages[this.colorIndex] += newImgDatas.length;\n                }\n                //只是把图片信息放在所有信息容器里面\n                this.allImgDatas[this.colorIndex] = this.allImgDatas[this.colorIndex].concat(newImgDatas)\n        });\n    }\n\n    setClientWidth = ()=>{\n        this.clientWidth = document.body.clientWidth;\n    }\n\n    setDocumentIsHidden = ()=>{\n        this.setState({\n            isDocumentHidden:document[this.hiddenNamesObj.hidden]\n        });\n    }\n    \n    componentDidMount() {\n        document.addEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\n        this.setClientWidth();\n        //首先进来请求一下数据\n        this.fetchData();\n        //然后设置定时器\n        this.startTimeTic();\n        window.addEventListener(\"resize\",this.setClientWidth);\n        this.initConsoleKeywords()\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(this.hiddenNamesObj.visibilityChange, this.setDocumentIsHidden);\n        clearInterval(this.timer);\n        window.removeEventListener(\"resize\",this.setClientWidth);\n    }\n\n    initConsoleKeywords=()=>{\n        let that = this;\n        console.log(\"祝贺你喜提彩蛋~\\n你可以在这里设置搜索图片的关键字，口令如下：\\nkeywords=\\\"美女\\\"\");\n        Object.defineProperty(window,\"keywords\",{\n            get:function (){\n                return that.word;    \n            },\n            set:function (value){\n                if (typeof value !== \"string\") {\n                    console.warn(\"别忽悠我，关键字必须是字符串！~~~~(>_<)~~~~ \")\n                } else if(!value){\n                    console.warn(\"至少写几个关键字吧！(～ o ～)~zZ\")\n                } else {\n                    console.info(\"关键字设置成功! O(∩_∩)O哈哈~\")\n                    that.resetKeywords.call(that,value)\n                }\n            }\n        });\n    }\n\n    resetKeywords(keywords,colorIndex){\n        if (typeof colorIndex === \"undefined\") {\n            // 彩蛋模式 重新从第0页开始查询\n            this.colorIndex = this.allImgDatas.length - 1;\n            this.currentPages[this.colorIndex] = 0;\n            this.allImgDatas[this.colorIndex] = [];\n        } else {\n            this.colorIndex = colorIndex;\n        }\n        \n        this.word = keywords;\n        this.setState(old=>{\n            old.imgDatas = old.imgDatas.filter((item)=>{\n                return !~this.cacheImgDatas.indexOf(item);\n            })\n            this.cacheImgDatas = [];\n        })\n    }\n\n    getHiddenName(){\n        var hidden, visibilityChange;\n        if (typeof document.hidden !== \"undefined\") {\n            hidden = \"hidden\";\n            visibilityChange = \"visibilitychange\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n            visibilityChange = \"mozvisibilitychange\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n            visibilityChange = \"msvisibilitychange\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n            visibilityChange = \"webkitvisibilitychange\";\n        }\n        return {\n            hidden,\n            visibilityChange\n        }\n    }\n\n    startTimeTic(){\n        this.timer = setInterval(() => {\n            if (this.state.isDocumentHidden) {//如果界面隐藏了 那么直接跳过\n                return ;\n            }\n            this.setState((old)=>{\n                if (this.allImgDatas[this.colorIndex].length <= this.minContainerNumber) {\n                    this.fetchData();\n                }\n                if (this.allImgDatas[this.colorIndex].length > 0 && old.imgDatas.length <= this.maxQueueNumber) {\n                    let currentImg = this.allImgDatas[this.colorIndex].splice(0,1)[0];\n                    let imgWidth = Math.min(Number(currentImg.thumb_width||currentImg.width),this.clientWidth * 35 / 100);\n                    currentImg.left = Math.random() * (this.clientWidth - imgWidth);\n                    currentImg.delayTime = Math.random() * 1;\n                    currentImg.durationTime = Math.random() * 5 + 3;\n                    old.imgDatas.push(currentImg);//每次拿最前面的一个\n                }\n                //清空缓存数据\n                if (this.cacheImgDatas.length > this.maxCacheNumber) {\n                    old.imgDatas = old.imgDatas.filter((item)=>{\n                        return !~this.cacheImgDatas.indexOf(item);\n                    })\n                    this.cacheImgDatas = [];\n                }\n                return old;\n            })\n        }, 1000);\n    }\n\n    handleDeleteImg = (item)=>{\n        //放入要删除的缓存中\n        this.cacheImgDatas.push(item)\n    }\n\n    handleSelectColor = (item,index)=>{\n        if (this.state.bgColor !== item.color) {\n            this.setState(old=>{\n                old.bgColor = item.color;\n                return old;\n            },()=>{\n                //重新设置关键字\n                this.resetKeywords(item.keywords,index)\n                window.localStorage.setItem(\"bgColor\",item.color)\n            });\n        }\n    }\n\n    handleImgClick = (item)=>{\n        this.setState({\n            isShow:true,\n            imgInfo:item\n        });\n    }\n\n    handleModalClose = ()=>{\n        this.setState({\n            isShow:false,\n        });\n    }\n\n    render() {\n        let {bgColor,isShow,imgInfo,isDocumentHidden} = this.state;\n        let animationPlayState = isDocumentHidden?\"paused\":\"running\";\n        return (\n        <div className=\"App\" style={{backgroundColor:bgColor}}>\n            <header className=\"App-header\" >\n                <div className=\"center\">\n                    <div className=\"dialogue-text hinge\" style={{animationDelay: \".8s\"}}>一大波美女正在靠近</div>\n                </div>\n                <ToolButton handleSelectColor={this.handleSelectColor} colors={COLORS}/>\n                <DesktopButton />\n                {this.state.imgDatas.map((item)=>{\n                    let src = item.thumbUrl || item.pic_url;\n                    if (!src) {\n                        return null;\n                    }\n                    let top = item.thumb_height || item.height;\n                    return (\n                        <ImgCord \n                            key={src} \n                            src={src} \n                            alt={item.alt} \n                            title={item.title} \n                            style={{\n                                top:-top,\n                                left:item.left+\"px\",\n                                animationDelay: item.delayTime+\"s\",\n                                animationDuration:item.durationTime+\"s\",\n                                animationPlayState:animationPlayState\n                            }}\n                            onAnimationEnd={this.handleDeleteImg.bind(this,item)}\n                            onClick={this.handleImgClick.bind(this,item)}\n                            />\n                    )\n                })}\n            </header>\n            <ImageModal isShow={isShow} imgInfo={imgInfo} onClose={this.handleModalClose}/>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}